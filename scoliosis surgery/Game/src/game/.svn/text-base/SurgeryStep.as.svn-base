package src.game {	import src.GLP.GLPScene;	import flash.errors.EOFError;	import flash.utils.getQualifiedClassName;	import src.GLP.GMGDebugger;	import flash.utils.getDefinitionByName;	import flash.display.MovieClip;	import flash.events.MouseEvent;	import flash.media.SoundChannel;	import flash.display.DisplayObject;	import flash.display.SimpleButton;		public class SurgeryStep extends GLPScene{				private var m_properties:SurgeryStepProperties;				public function SurgeryStep() {			for(var i:uint = 0; i < numChildren; i++)			{				if(getChildAt(i) is SurgeryStepProperties)				{					m_properties = SurgeryStepProperties(getChildAt(i));				}			}		}				public function getProperties():SurgeryStepProperties		{			if(m_properties == null)			{				GMGDebugger.traceString("No properties defined at scene " + getQualifiedClassName(this) + 					  ". Add a SurgeryStepProperties element to the SurgeryStep object.");				m_properties = new SurgeryStepProperties();			}			return m_properties;		}				public function stepIsNamed(name:String):Boolean		{			return (getQualifiedClassName(this).indexOf(name) >= 0);		}				public function updateSounds():void		{			if(getProperties().soundList != null)			{				for(var soundIndex:int = 0; soundIndex < getProperties().soundList.length; soundIndex++)				{					var movieClipName:String = getProperties().soundList[soundIndex].toString().split(",")[0];					var array:Array = movieClipName.split(".");					var displayObject:DisplayObject = movieClipName == "this" ? this : this.getChildByName(array[0]);					var clipAsMC:MovieClip = displayObject as MovieClip;										if(array.length > 1)					{						for(var i:int = 1; i < array.length; i++)						{							clipAsMC = displayObject as MovieClip;							if(clipAsMC != null)							{								displayObject = clipAsMC.getChildByName(array[i]);								clipAsMC = displayObject as MovieClip;							}							else							{								trace("Element named " + displayObject.name + " is not MovieClip type.");							}						}					}										var frame:Number;					var sound:String;					var loop:Number;					var particularEvent:String;										if(clipAsMC != null)					{						frame = Number(getProperties().soundList[soundIndex].toString().split(",")[1]);						sound = getProperties().soundList[soundIndex].toString().split(",")[2];						loop = Number(getProperties().soundList[soundIndex].toString().split(",")[3]);						particularEvent = getProperties().soundList[soundIndex].toString().split(",")[4];												try						{							if(clipAsMC.currentFrame == frame)							{								var gmgSound:Class = getDefinitionByName(sound) as Class;															if(particularEvent == "over")								{									clipAsMC.addEventListener(MouseEvent.MOUSE_OVER, mcOver);									clipAsMC.overSound = new gmgSound();									clipAsMC.overLoop = loop;								}								else if(particularEvent == "click")								{									clipAsMC.addEventListener(MouseEvent.CLICK, mcClick);									clipAsMC.clickSound = new gmgSound();									clipAsMC.clickLoop = loop;								}								else if(particularEvent == "out")								{									clipAsMC.addEventListener(MouseEvent.MOUSE_OUT, mcOut);									clipAsMC.outSound = new gmgSound();									clipAsMC.outLoop = loop;								}								else if(particularEvent == "down")								{									clipAsMC.addEventListener(MouseEvent.MOUSE_DOWN, mcDown);									clipAsMC.addEventListener(MouseEvent.MOUSE_UP, mcRelease);									clipAsMC.addEventListener(MouseEvent.MOUSE_OUT, mcRelease);									//clipAsMC.addEventListener(MouseEvent.MOUSE_OVER, mcOverAfterDown);									clipAsMC.downSound = new gmgSound();									clipAsMC.downLoop = loop;								}								else								{									SoundManager.sharedManager().playSound(new gmgSound(), loop);								}								getProperties().soundList.splice(soundIndex, 1);								soundIndex--;							}						}						catch (err:Error)						{							GMGDebugger.traceString("Sound of name " + sound + " called at " + getQualifiedClassName(this) + " does not exist.");							return;						}					}					else					{						GMGDebugger.traceString("Movieclip of name " + movieClipName + " called at " + getQualifiedClassName(this) + " does not exist.");					}				}			}		}				public function mcOver(ev:MouseEvent)		{			SoundManager.sharedManager().playSound(ev.currentTarget.overSound as GMGSound, ev.currentTarget.overLoop as Number);		}				public function mcOut(ev:MouseEvent)		{			SoundManager.sharedManager().playSound(ev.currentTarget.outSound as GMGSound, ev.currentTarget.outLoop as Number);		}				public function mcClick(ev:MouseEvent)		{			SoundManager.sharedManager().playSound(ev.currentTarget.clickSound as GMGSound, ev.currentTarget.clickLoop as Number);		}				public function mcDown(ev:MouseEvent)		{			if(ev.currentTarget.soundChannelDown == null)			{				ev.currentTarget.soundChannelDown = SoundManager.sharedManager().playSound(ev.currentTarget.downSound as GMGSound, ev.currentTarget.downLoop as Number);			}		}				public function mcRelease(ev:MouseEvent)		{			if(ev.currentTarget.soundChannelDown != null)			{				ev.currentTarget.soundChannelDown.stop();				ev.currentTarget.soundChannelDown = null;			}		}		/*		public function mcOverAfterDown(ev:MouseEvent)		{			if(ev.buttonDown)			{				mcDown(ev);			}		}		*/	}}